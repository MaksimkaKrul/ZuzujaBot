import random
import emoji
from telebot import types
from setings import bot
from pathlib import Path

time_for_message = {}
rps_game = ['–∫–∞–º—ñ–Ω—å', '–ø–∞–ø—ñ—Ä', '–Ω–æ–∂–Ω–∏—Ü—ñ']


@bot.message_handler(commands=['help'])
def help(message):
    bot.reply_to(message, "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —É –±–æ—Ç—ñ: \n"
                          "/discordannouncement - –¥—ñ–∑–Ω–∞—Ç–∏—Å—å 3 –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑ –¥—ñ—Å–∫–æ—Ä–¥ –∫–∞–Ω–∞–ª—É GoITeens \n"
                          "/rock_paper_scissors  - –∑—ñ–≥—Ä–∞—Ç–∏ –≤ –∫–∞–º—ñ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ñ, –ø–∞–ø—ñ—Ä –∑ –±–æ—Ç–æ–º \n"
                          "/discordnews - –¥—ñ–∑–Ω–∞—Ç–∏—Å—å 3 –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –Ω–æ–≤–∏–Ω–∏ GoITeens" )


@bot.message_handler(commands=['discordannouncement'])
def get_announcement(message):
    last_announcement = Path('lastmessage1.txt').read_text()
    last_announcement = emoji.emojize(last_announcement)
    bot.reply_to(message, "–ó–∞—Ä–∞–∑ –≤–∏ –¥—ñ–∑–Ω–∞—î—Ç–µ—Å—å –æ—Å—Ç–∞–Ω–Ω—ñ 3 –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è discord —Å–µ—Ä–≤–µ—Ä–∞ GoITeens, "
                          "–∫–æ–∂–Ω–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –≤—ñ–¥–æ–∫—Ä–µ–º–ª–µ–Ω–µ –∑–Ω–∞–∫–∞–º–∏ ----")
    bot.reply_to(message, last_announcement)


@bot.message_handler(commands=['rock_paper_scissors'])
def get_answer(message):
    keyboard = types.InlineKeyboardMarkup()
    key_rock = types.InlineKeyboardButton(text='–ö–∞–º—ñ–Ω—å üíé', callback_data='rock')
    keyboard.add(key_rock)
    key_paper = types.InlineKeyboardButton(text='–ü–∞–ø—ñ—Ä üìÉ', callback_data='paper')
    keyboard.add(key_paper)
    key_scissors = types.InlineKeyboardButton(text='–ù–æ–∂–Ω–∏—Ü—ñ ‚úÇ', callback_data='scissors')
    keyboard.add(key_scissors)
    question = '–©–æ–± –ø–æ—á–∞—Ç–∏ –≥—Ä—É, –≤–∏–±–µ—Ä–∏ –∫–∞–º—ñ–Ω—å,–ø–∞–ø—ñ—Ä —á–∏ –Ω–æ–∂–Ω–∏—Ü—ñ'
    bot.send_message(message.from_user.id, text=question, reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    bot_choice = random.choice(rps_game)
    bot.send_message(call.message.chat.id, '–Ø –æ–±—Ä–∞–≤' + ' ' + bot_choice)
    if call.data == "rock":
        if bot_choice == '–∫–∞–º—ñ–Ω—å':
            bot.send_message(call.message.chat.id, '–£ –Ω–∞—Å –Ω—ñ—á–∏—è!')
        elif bot_choice == '–ø–∞–ø—ñ—Ä':
            bot.send_message(call.message.chat.id, '–¢–∏ –ø—Ä–æ–≥—Ä–∞–≤!')
        else:
            bot.send_message(call.message.chat.id, '–¢–∏ –ø–µ—Ä–µ–º—ñ–≥!')

    elif call.data == "paper":
        if bot_choice == '–∫–∞–º—ñ–Ω—å':
            bot.send_message(call.message.chat.id, '–¢–∏ –ø–µ—Ä–µ–º—ñ–≥!')
        elif bot_choice == '–ø–∞–ø—ñ—Ä':
            bot.send_message(call.message.chat.id, '–£ –Ω–∞—Å –Ω—ñ—á–∏—è!')
        else:
            bot.send_message(call.message.chat.id, '–¢–∏ –ø—Ä–æ–≥—Ä–∞–≤!')

    elif call.data == "scissors":
        if bot_choice == '–∫–∞–º—ñ–Ω—å':
            bot.send_message(call.message.chat.id, '–¢–∏ –ø—Ä–æ–≥—Ä–∞–≤!')
        elif bot_choice == '–ø–∞–ø—ñ—Ä':
            bot.send_message(call.message.chat.id, '–£ –Ω–∞—Å –≤–∏–≥—Ä–∞–≤!')
        else:
            bot.send_message(call.message.chat.id, '–£ –Ω–∞—Å –Ω—ñ—á–∏—è!')


@bot.message_handler(commands=['discordnews'])
def get_news(message):
    last_news = Path('lastmessage2.txt').read_text()
    last_news = emoji.emojize(last_news)
    bot.reply_to(message, "–ó–∞—Ä–∞–∑ –≤–∏ –¥—ñ–∑–Ω–∞—î—Ç–µ—Å—å –æ—Å—Ç–∞–Ω–Ω—ñ 3 –Ω–æ–≤–∏–Ω–∏ discord —Å–µ—Ä–≤–µ—Ä–∞ GoITeens, "
                          "–∫–æ–∂–Ω–∞ –Ω–æ–≤–∏–Ω–∞ –≤—ñ–¥–æ–∫—Ä–µ–º–ª–µ–Ω–∞ –∑–Ω–∞–∫–∞–º–∏ ----")
    bot.reply_to(message, last_news)

bot.infinity_polling()
